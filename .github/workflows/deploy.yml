name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'src/**'
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Create version tag
        id: version
        run: echo "version=$(date +%Y.%m.%d.%H%M%S)" >> $GITHUB_OUTPUT
      - name: Build Docker image
        run: |
          TAG=${{ secrets.DOCKERHUB_USERNAME }}/steves-bot:${{ steps.version.outputs.version }}
          docker build -t $TAG src/StevesBot.Worker
          docker push $TAG
  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run image on server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd steves-bot

            echo 'Logging__LogLevel__Default=Debug>> .env
            echo 'Logging__LogLevel__Microsoft=Debug' >> .env
            echo 'Logging__LogLevel__Microsoft.Hosting.Lifetime=Debug' >> .env
            echo 'DiscordClientOptions__ApiUrl=${{ vars.DISCORD_API_URL }}' >> .env
            echo 'DiscordClientOptions__AppToken=${{ secrets.DISCORD_APP_TOKEN }}' >> .env
            echo 'DiscordClientOptions__Intents=${{ vars.DISCORD_INTENTS }}' >> .env
            echo 'SeqOptions__ServerUrl=${{ secrets.SEQ_SERVER_URL }}' >> .env
            echo 'SeqOptions__ApiKeyHeader=${{ vars.SEQ_API_KEY_HEADER }}' >> .env
            echo 'SeqOptions__ApiKey=${{ secrets.SEQ_API_KEY }}' >> .env
            echo 'DOTNET_ENVIRONMENT=Production' >> .env

            docker stop steves-bot
            docker rm steves-bot
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/steves-bot:${{ needs.build.outputs.version }}
            docker run \
              --name steves-bot \
              --restart always \
              --env-file .env \
              -d \
              ${{ secrets.DOCKERHUB_USERNAME }}/steves-bot:${{ needs.build.outputs.version }}
            
            rm .env